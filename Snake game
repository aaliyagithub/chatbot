{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled4.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyM+oWF0vSHR1bxyOXD+lKVO",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/aaliyagithub/chatbot/blob/master/Snake%20game\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KR2stVvh3ZM3",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "081b1686-062f-4153-eea4-51e9dea1ef36"
      },
      "source": [
        "!pip install freegames\n"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: freegames in /usr/local/lib/python3.6/dist-packages (2.3.2)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Z90V0JRh4EBB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from turtle import*\n",
        "from random import randrange\n",
        "from freegames import square,vector\n",
        "\n",
        "food=vector(0,0)\n",
        "snake=[vector(10,0)]\n",
        "aim=vector(0,-10)\n",
        "\n",
        "def change(x,y):\n",
        "    aim.x=x\n",
        "    aim.y=y\n",
        "\n",
        "def inside(head):\n",
        "    return -200 <head.x < 190 and -200 < head.y < 190\n",
        "\n",
        "\n",
        "def move():\n",
        "    head=snake[-1].copy()\n",
        "    head.move(aim)\n",
        "\n",
        "    if not inside(head) or head in snake:\n",
        "        square(head.x,head.y,9,'red')\n",
        "        update()\n",
        "        return\n",
        "\n",
        "    snake.append()\n",
        "\n",
        "    if head==food:\n",
        "        print('snake',len(snake))\n",
        "        food.x=randrange(-15,15)*10\n",
        "        food.y=randrange(-15,15)*10\n",
        "\n",
        "    else:\n",
        "        snake.pop(0)\n",
        "\n",
        "    clear()\n",
        "\n",
        "    for body in snake:\n",
        "        square(body.x,body.y,9,'green')\n",
        "\n",
        "    square(food.x, food.y, 9, 'red')\n",
        "    update()\n",
        "    ontimer(move,100)\n",
        "\n",
        "    hideturtle()\n",
        "    tracer(False)\n",
        "    listen()\n",
        "    onkey(lambda:changes(10,0),'Right')\n",
        "    onkey(lambda:changes(-10, 0),'Left')\n",
        "    onkey(lambda:changes(0, 10),'Up')\n",
        "    onkey(lambda:changes(0, -10),'Down')\n",
        "\n",
        "    move()\n",
        "    done()"
      ],
      "execution_count": 9,
      "outputs": []
    }
  ]
}